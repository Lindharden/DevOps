version: "3.9"

services:
  minitwit:
    image: ${DOCKER_USERNAME}/minitwitimage
    environment:
      GO_ENV: production
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    container_name: minitwit
    networks:
      - database-network
      - prometheus-network
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - database-network
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: db
      PGDATA: /data/postgres
    volumes:
      - postgres-db:/data/postgres

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - prometheus-network
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - type: bind
        source: ./prometheus.yml
        target: /prometheus/prometheus.yml
        read_only: true
    restart: unless-stopped
    command:
      - "--config.file=prometheus.yml"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    networks:
      - monitoring

volumes:
  postgres-db:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  database-network:
    name: database-network
  prometheus-network:
    name: prometheus-network
  monitoring:
    driver: bridge
